# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#apache-maven-with-a-settings-path

name: Publish Maven Package

on:
  release:
    types: [ edited ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Publish to GitHub Packages Apache Maven
        run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
        env:
          GITHUB_TOKEN: ${{ secrest.PAT }}

      - name: Set up JFrog
        uses: actions/setup-java@v1
        with: # running setup-java again overwrites the settings.xml
          java-version: 1.8
          server-id: jfrog-vertx-vaadin-releases # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: JFROG_USERNAME # env variable for username in deploy
          server-password: JFROG_TOKEN # env variable for token in deploy
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }} # Value of the GPG private key to import
          gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase

      - name: Publish to JFrog
        run: mvn deploy
        env:
          JFROG_USERNAME: mcollovati@gmail.com
          JFROG_TOKEN: ${{ secrets.JFROG_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}